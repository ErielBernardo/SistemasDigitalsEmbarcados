   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"system_LPC17xx.c"
  23              	.Ltext0:
  24              		.file 1 "../system_LPC17xx.c"
 2006              		.align	2
 2009              	SystemCoreClock:
 2010 0000 00E1F505 		.word	100000000
 2011              		.text
 2012              		.align	2
 2013              		.global	SystemCoreClockUpdate
 2014              		.thumb
 2015              		.thumb_func
 2017              	SystemCoreClockUpdate:
 2018              	.LFB29:
   1:../system_LPC17xx.c **** /**************************************************************************//**
   2:../system_LPC17xx.c ****  * @file     system_LPC17xx.c
   3:../system_LPC17xx.c ****  * @brief    CMSIS Cortex-M3 Device Peripheral Access Layer Source File
   4:../system_LPC17xx.c ****  *           for the NXP LPC17xx Device Series
   5:../system_LPC17xx.c ****  * @version  V1.03
   6:../system_LPC17xx.c ****  * @date     07. October 2009
   7:../system_LPC17xx.c ****  *
   8:../system_LPC17xx.c ****  * @note
   9:../system_LPC17xx.c ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
  10:../system_LPC17xx.c ****  *
  11:../system_LPC17xx.c ****  * @par
  12:../system_LPC17xx.c ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  13:../system_LPC17xx.c ****  * processor based microcontrollers.  This file can be freely distributed 
  14:../system_LPC17xx.c ****  * within development tools that are supporting such ARM based processors. 
  15:../system_LPC17xx.c ****  *
  16:../system_LPC17xx.c ****  * @par
  17:../system_LPC17xx.c ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  18:../system_LPC17xx.c ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  19:../system_LPC17xx.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  20:../system_LPC17xx.c ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  21:../system_LPC17xx.c ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  22:../system_LPC17xx.c ****  *
  23:../system_LPC17xx.c ****  ******************************************************************************/
  24:../system_LPC17xx.c **** 
  25:../system_LPC17xx.c **** 
  26:../system_LPC17xx.c **** #include <stdint.h>
  27:../system_LPC17xx.c **** #include "LPC17xx.h"
  28:../system_LPC17xx.c **** 
  29:../system_LPC17xx.c **** /*
  30:../system_LPC17xx.c **** //-------- <<< Use Configuration Wizard in Context Menu >>> ------------------
  31:../system_LPC17xx.c **** */
  32:../system_LPC17xx.c **** 
  33:../system_LPC17xx.c **** /*--------------------- Clock Configuration ----------------------------------
  34:../system_LPC17xx.c **** //
  35:../system_LPC17xx.c **** // <e> Clock Configuration
  36:../system_LPC17xx.c **** //   <h> System Controls and Status Register (SCS)
  37:../system_LPC17xx.c **** //     <o1.4>    OSCRANGE: Main Oscillator Range Select
  38:../system_LPC17xx.c **** //                     <0=>  1 MHz to 20 MHz
  39:../system_LPC17xx.c **** //                     <1=> 15 MHz to 24 MHz
  40:../system_LPC17xx.c **** //     <e1.5>       OSCEN: Main Oscillator Enable
  41:../system_LPC17xx.c **** //     </e>
  42:../system_LPC17xx.c **** //   </h>
  43:../system_LPC17xx.c **** //
  44:../system_LPC17xx.c **** //   <h> Clock Source Select Register (CLKSRCSEL)
  45:../system_LPC17xx.c **** //     <o2.0..1>   CLKSRC: PLL Clock Source Selection
  46:../system_LPC17xx.c **** //                     <0=> Internal RC oscillator
  47:../system_LPC17xx.c **** //                     <1=> Main oscillator
  48:../system_LPC17xx.c **** //                     <2=> RTC oscillator
  49:../system_LPC17xx.c **** //   </h>
  50:../system_LPC17xx.c **** //
  51:../system_LPC17xx.c **** //   <e3> PLL0 Configuration (Main PLL)
  52:../system_LPC17xx.c **** //     <h> PLL0 Configuration Register (PLL0CFG)
  53:../system_LPC17xx.c **** //                     <i> F_cco0 = (2 * M * F_in) / N
  54:../system_LPC17xx.c **** //                     <i> F_in must be in the range of 32 kHz to 50 MHz
  55:../system_LPC17xx.c **** //                     <i> F_cco0 must be in the range of 275 MHz to 550 MHz
  56:../system_LPC17xx.c **** //       <o4.0..14>  MSEL: PLL Multiplier Selection
  57:../system_LPC17xx.c **** //                     <6-32768><#-1>
  58:../system_LPC17xx.c **** //                     <i> M Value
  59:../system_LPC17xx.c **** //       <o4.16..23> NSEL: PLL Divider Selection
  60:../system_LPC17xx.c **** //                     <1-256><#-1>
  61:../system_LPC17xx.c **** //                     <i> N Value
  62:../system_LPC17xx.c **** //     </h>
  63:../system_LPC17xx.c **** //   </e>
  64:../system_LPC17xx.c **** //
  65:../system_LPC17xx.c **** //   <e5> PLL1 Configuration (USB PLL)
  66:../system_LPC17xx.c **** //     <h> PLL1 Configuration Register (PLL1CFG)
  67:../system_LPC17xx.c **** //                     <i> F_usb = M * F_osc or F_usb = F_cco1 / (2 * P)
  68:../system_LPC17xx.c **** //                     <i> F_cco1 = F_osc * M * 2 * P
  69:../system_LPC17xx.c **** //                     <i> F_cco1 must be in the range of 156 MHz to 320 MHz
  70:../system_LPC17xx.c **** //       <o6.0..4>   MSEL: PLL Multiplier Selection
  71:../system_LPC17xx.c **** //                     <1-32><#-1>
  72:../system_LPC17xx.c **** //                     <i> M Value (for USB maximum value is 4)
  73:../system_LPC17xx.c **** //       <o6.5..6>   PSEL: PLL Divider Selection
  74:../system_LPC17xx.c **** //                     <0=> 1
  75:../system_LPC17xx.c **** //                     <1=> 2
  76:../system_LPC17xx.c **** //                     <2=> 4
  77:../system_LPC17xx.c **** //                     <3=> 8
  78:../system_LPC17xx.c **** //                     <i> P Value
  79:../system_LPC17xx.c **** //     </h>
  80:../system_LPC17xx.c **** //   </e>
  81:../system_LPC17xx.c **** //
  82:../system_LPC17xx.c **** //   <h> CPU Clock Configuration Register (CCLKCFG)
  83:../system_LPC17xx.c **** //     <o7.0..7>  CCLKSEL: Divide Value for CPU Clock from PLL0
  84:../system_LPC17xx.c **** //                     <3-256><#-1>
  85:../system_LPC17xx.c **** //   </h>
  86:../system_LPC17xx.c **** //
  87:../system_LPC17xx.c **** //   <h> USB Clock Configuration Register (USBCLKCFG)
  88:../system_LPC17xx.c **** //     <o8.0..3>   USBSEL: Divide Value for USB Clock from PLL0
  89:../system_LPC17xx.c **** //                     <0-15>
  90:../system_LPC17xx.c **** //                     <i> Divide is USBSEL + 1
  91:../system_LPC17xx.c **** //   </h>
  92:../system_LPC17xx.c **** //
  93:../system_LPC17xx.c **** //   <h> Peripheral Clock Selection Register 0 (PCLKSEL0)
  94:../system_LPC17xx.c **** //     <o9.0..1>    PCLK_WDT: Peripheral Clock Selection for WDT
  95:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
  96:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
  97:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
  98:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
  99:../system_LPC17xx.c **** //     <o9.2..3>    PCLK_TIMER0: Peripheral Clock Selection for TIMER0
 100:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 101:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 102:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 103:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 104:../system_LPC17xx.c **** //     <o9.4..5>    PCLK_TIMER1: Peripheral Clock Selection for TIMER1
 105:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 106:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 107:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 108:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 109:../system_LPC17xx.c **** //     <o9.6..7>    PCLK_UART0: Peripheral Clock Selection for UART0
 110:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 111:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 112:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 113:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 114:../system_LPC17xx.c **** //     <o9.8..9>    PCLK_UART1: Peripheral Clock Selection for UART1
 115:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 116:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 117:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 118:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 119:../system_LPC17xx.c **** //     <o9.12..13>  PCLK_PWM1: Peripheral Clock Selection for PWM1
 120:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 121:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 122:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 123:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 124:../system_LPC17xx.c **** //     <o9.14..15>  PCLK_I2C0: Peripheral Clock Selection for I2C0
 125:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 126:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 127:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 128:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 129:../system_LPC17xx.c **** //     <o9.16..17>  PCLK_SPI: Peripheral Clock Selection for SPI
 130:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 131:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 132:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 133:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 134:../system_LPC17xx.c **** //     <o9.20..21>  PCLK_SSP1: Peripheral Clock Selection for SSP1
 135:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 136:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 137:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 138:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 139:../system_LPC17xx.c **** //     <o9.22..23>  PCLK_DAC: Peripheral Clock Selection for DAC
 140:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 141:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 142:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 143:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 144:../system_LPC17xx.c **** //     <o9.24..25>  PCLK_ADC: Peripheral Clock Selection for ADC
 145:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 146:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 147:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 148:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 149:../system_LPC17xx.c **** //     <o9.26..27>  PCLK_CAN1: Peripheral Clock Selection for CAN1
 150:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 151:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 152:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 153:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 6
 154:../system_LPC17xx.c **** //     <o9.28..29>  PCLK_CAN2: Peripheral Clock Selection for CAN2
 155:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 156:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 157:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 158:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 6
 159:../system_LPC17xx.c **** //     <o9.30..31>  PCLK_ACF: Peripheral Clock Selection for ACF
 160:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 161:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 162:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 163:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 6
 164:../system_LPC17xx.c **** //   </h>
 165:../system_LPC17xx.c **** //
 166:../system_LPC17xx.c **** //   <h> Peripheral Clock Selection Register 1 (PCLKSEL1)
 167:../system_LPC17xx.c **** //     <o10.0..1>   PCLK_QEI: Peripheral Clock Selection for the Quadrature Encoder Interface
 168:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 169:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 170:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 171:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 172:../system_LPC17xx.c **** //     <o10.2..3>   PCLK_GPIO: Peripheral Clock Selection for GPIOs
 173:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 174:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 175:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 176:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 177:../system_LPC17xx.c **** //     <o10.4..5>   PCLK_PCB: Peripheral Clock Selection for the Pin Connect Block
 178:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 179:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 180:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 181:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 182:../system_LPC17xx.c **** //     <o10.6..7>   PCLK_I2C1: Peripheral Clock Selection for I2C1
 183:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 184:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 185:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 186:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 187:../system_LPC17xx.c **** //     <o10.10..11> PCLK_SSP0: Peripheral Clock Selection for SSP0
 188:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 189:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 190:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 191:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 192:../system_LPC17xx.c **** //     <o10.12..13> PCLK_TIMER2: Peripheral Clock Selection for TIMER2
 193:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 194:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 195:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 196:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 197:../system_LPC17xx.c **** //     <o10.14..15> PCLK_TIMER3: Peripheral Clock Selection for TIMER3
 198:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 199:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 200:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 201:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 202:../system_LPC17xx.c **** //     <o10.16..17> PCLK_UART2: Peripheral Clock Selection for UART2
 203:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 204:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 205:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 206:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 207:../system_LPC17xx.c **** //     <o10.18..19> PCLK_UART3: Peripheral Clock Selection for UART3
 208:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 209:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 210:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 211:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 212:../system_LPC17xx.c **** //     <o10.20..21> PCLK_I2C2: Peripheral Clock Selection for I2C2
 213:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 214:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 215:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 216:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 217:../system_LPC17xx.c **** //     <o10.22..23> PCLK_I2S: Peripheral Clock Selection for I2S
 218:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 219:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 220:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 221:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 222:../system_LPC17xx.c **** //     <o10.26..27> PCLK_RIT: Peripheral Clock Selection for the Repetitive Interrupt Timer
 223:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 224:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 225:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 226:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 227:../system_LPC17xx.c **** //     <o10.28..29> PCLK_SYSCON: Peripheral Clock Selection for the System Control Block
 228:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 229:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 230:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 231:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 232:../system_LPC17xx.c **** //     <o10.30..31> PCLK_MC: Peripheral Clock Selection for the Motor Control PWM
 233:../system_LPC17xx.c **** //                     <0=> Pclk = Cclk / 4
 234:../system_LPC17xx.c **** //                     <1=> Pclk = Cclk
 235:../system_LPC17xx.c **** //                     <2=> Pclk = Cclk / 2
 236:../system_LPC17xx.c **** //                     <3=> Pclk = Hclk / 8
 237:../system_LPC17xx.c **** //   </h>
 238:../system_LPC17xx.c **** //
 239:../system_LPC17xx.c **** //   <h> Power Control for Peripherals Register (PCONP)
 240:../system_LPC17xx.c **** //     <o11.1>      PCTIM0: Timer/Counter 0 power/clock enable
 241:../system_LPC17xx.c **** //     <o11.2>      PCTIM1: Timer/Counter 1 power/clock enable
 242:../system_LPC17xx.c **** //     <o11.3>      PCUART0: UART 0 power/clock enable
 243:../system_LPC17xx.c **** //     <o11.4>      PCUART1: UART 1 power/clock enable
 244:../system_LPC17xx.c **** //     <o11.6>      PCPWM1: PWM 1 power/clock enable
 245:../system_LPC17xx.c **** //     <o11.7>      PCI2C0: I2C interface 0 power/clock enable
 246:../system_LPC17xx.c **** //     <o11.8>      PCSPI: SPI interface power/clock enable
 247:../system_LPC17xx.c **** //     <o11.9>      PCRTC: RTC power/clock enable
 248:../system_LPC17xx.c **** //     <o11.10>     PCSSP1: SSP interface 1 power/clock enable
 249:../system_LPC17xx.c **** //     <o11.12>     PCAD: A/D converter power/clock enable
 250:../system_LPC17xx.c **** //     <o11.13>     PCCAN1: CAN controller 1 power/clock enable
 251:../system_LPC17xx.c **** //     <o11.14>     PCCAN2: CAN controller 2 power/clock enable
 252:../system_LPC17xx.c **** //     <o11.15>     PCGPIO: GPIOs power/clock enable
 253:../system_LPC17xx.c **** //     <o11.16>     PCRIT: Repetitive interrupt timer power/clock enable
 254:../system_LPC17xx.c **** //     <o11.17>     PCMC: Motor control PWM power/clock enable
 255:../system_LPC17xx.c **** //     <o11.18>     PCQEI: Quadrature encoder interface power/clock enable
 256:../system_LPC17xx.c **** //     <o11.19>     PCI2C1: I2C interface 1 power/clock enable
 257:../system_LPC17xx.c **** //     <o11.21>     PCSSP0: SSP interface 0 power/clock enable
 258:../system_LPC17xx.c **** //     <o11.22>     PCTIM2: Timer 2 power/clock enable
 259:../system_LPC17xx.c **** //     <o11.23>     PCTIM3: Timer 3 power/clock enable
 260:../system_LPC17xx.c **** //     <o11.24>     PCUART2: UART 2 power/clock enable
 261:../system_LPC17xx.c **** //     <o11.25>     PCUART3: UART 3 power/clock enable
 262:../system_LPC17xx.c **** //     <o11.26>     PCI2C2: I2C interface 2 power/clock enable
 263:../system_LPC17xx.c **** //     <o11.27>     PCI2S: I2S interface power/clock enable
 264:../system_LPC17xx.c **** //     <o11.29>     PCGPDMA: GP DMA function power/clock enable
 265:../system_LPC17xx.c **** //     <o11.30>     PCENET: Ethernet block power/clock enable
 266:../system_LPC17xx.c **** //     <o11.31>     PCUSB: USB interface power/clock enable
 267:../system_LPC17xx.c **** //   </h>
 268:../system_LPC17xx.c **** //
 269:../system_LPC17xx.c **** //   <h> Clock Output Configuration Register (CLKOUTCFG)
 270:../system_LPC17xx.c **** //     <o12.0..3>   CLKOUTSEL: Selects clock source for CLKOUT
 271:../system_LPC17xx.c **** //                     <0=> CPU clock
 272:../system_LPC17xx.c **** //                     <1=> Main oscillator
 273:../system_LPC17xx.c **** //                     <2=> Internal RC oscillator
 274:../system_LPC17xx.c **** //                     <3=> USB clock
 275:../system_LPC17xx.c **** //                     <4=> RTC oscillator
 276:../system_LPC17xx.c **** //     <o12.4..7>   CLKOUTDIV: Selects clock divider for CLKOUT
 277:../system_LPC17xx.c **** //                     <1-16><#-1>
 278:../system_LPC17xx.c **** //     <o12.8>      CLKOUT_EN: CLKOUT enable control
 279:../system_LPC17xx.c **** //   </h>
 280:../system_LPC17xx.c **** //
 281:../system_LPC17xx.c **** // </e>
 282:../system_LPC17xx.c **** */
 283:../system_LPC17xx.c **** #define CLOCK_SETUP           1
 284:../system_LPC17xx.c **** #define SCS_Val               0x00000020
 285:../system_LPC17xx.c **** #define CLKSRCSEL_Val         0x00000001
 286:../system_LPC17xx.c **** #define PLL0_SETUP            1
 287:../system_LPC17xx.c **** #define PLL0CFG_Val           0x00050063
 288:../system_LPC17xx.c **** #define PLL1_SETUP            1
 289:../system_LPC17xx.c **** #define PLL1CFG_Val           0x00000023
 290:../system_LPC17xx.c **** #define CCLKCFG_Val           0x00000003
 291:../system_LPC17xx.c **** #define USBCLKCFG_Val         0x00000000
 292:../system_LPC17xx.c **** #define PCLKSEL0_Val          0x00000000
 293:../system_LPC17xx.c **** #define PCLKSEL1_Val          0x00000000
 294:../system_LPC17xx.c **** #define PCONP_Val             0x042887DE
 295:../system_LPC17xx.c **** #define CLKOUTCFG_Val         0x00000000
 296:../system_LPC17xx.c **** 
 297:../system_LPC17xx.c **** 
 298:../system_LPC17xx.c **** /*--------------------- Flash Accelerator Configuration ----------------------
 299:../system_LPC17xx.c **** //
 300:../system_LPC17xx.c **** // <e> Flash Accelerator Configuration
 301:../system_LPC17xx.c **** //   <o1.0..1>   FETCHCFG: Fetch Configuration
 302:../system_LPC17xx.c **** //               <0=> Instruction fetches from flash are not buffered
 303:../system_LPC17xx.c **** //               <1=> One buffer is used for all instruction fetch buffering
 304:../system_LPC17xx.c **** //               <2=> All buffers may be used for instruction fetch buffering
 305:../system_LPC17xx.c **** //               <3=> Reserved (do not use this setting)
 306:../system_LPC17xx.c **** //   <o1.2..3>   DATACFG: Data Configuration
 307:../system_LPC17xx.c **** //               <0=> Data accesses from flash are not buffered
 308:../system_LPC17xx.c **** //               <1=> One buffer is used for all data access buffering
 309:../system_LPC17xx.c **** //               <2=> All buffers may be used for data access buffering
 310:../system_LPC17xx.c **** //               <3=> Reserved (do not use this setting)
 311:../system_LPC17xx.c **** //   <o1.4>      ACCEL: Acceleration Enable
 312:../system_LPC17xx.c **** //   <o1.5>      PREFEN: Prefetch Enable
 313:../system_LPC17xx.c **** //   <o1.6>      PREFOVR: Prefetch Override
 314:../system_LPC17xx.c **** //   <o1.12..15> FLASHTIM: Flash Access Time
 315:../system_LPC17xx.c **** //               <0=> 1 CPU clock (for CPU clock up to 20 MHz)
 316:../system_LPC17xx.c **** //               <1=> 2 CPU clocks (for CPU clock up to 40 MHz)
 317:../system_LPC17xx.c **** //               <2=> 3 CPU clocks (for CPU clock up to 60 MHz)
 318:../system_LPC17xx.c **** //               <3=> 4 CPU clocks (for CPU clock up to 80 MHz)
 319:../system_LPC17xx.c **** //               <4=> 5 CPU clocks (for CPU clock up to 100 MHz)
 320:../system_LPC17xx.c **** //               <5=> 6 CPU clocks (for any CPU clock)
 321:../system_LPC17xx.c **** // </e>
 322:../system_LPC17xx.c **** */
 323:../system_LPC17xx.c **** #define FLASH_SETUP           1
 324:../system_LPC17xx.c **** #define FLASHCFG_Val          0x0000303A
 325:../system_LPC17xx.c **** 
 326:../system_LPC17xx.c **** /*
 327:../system_LPC17xx.c **** //-------- <<< end of configuration section >>> ------------------------------
 328:../system_LPC17xx.c **** */
 329:../system_LPC17xx.c **** 
 330:../system_LPC17xx.c **** /*----------------------------------------------------------------------------
 331:../system_LPC17xx.c ****   Check the register settings
 332:../system_LPC17xx.c ****  *----------------------------------------------------------------------------*/
 333:../system_LPC17xx.c **** #define CHECK_RANGE(val, min, max)                ((val < min) || (val > max))
 334:../system_LPC17xx.c **** #define CHECK_RSVD(val, mask)                     (val & mask)
 335:../system_LPC17xx.c **** 
 336:../system_LPC17xx.c **** /* Clock Configuration -------------------------------------------------------*/
 337:../system_LPC17xx.c **** #if (CHECK_RSVD((SCS_Val),       ~0x00000030))
 338:../system_LPC17xx.c ****    #error "SCS: Invalid values of reserved bits!"
 339:../system_LPC17xx.c **** #endif
 340:../system_LPC17xx.c **** 
 341:../system_LPC17xx.c **** #if (CHECK_RANGE((CLKSRCSEL_Val), 0, 2))
 342:../system_LPC17xx.c ****    #error "CLKSRCSEL: Value out of range!"
 343:../system_LPC17xx.c **** #endif
 344:../system_LPC17xx.c **** 
 345:../system_LPC17xx.c **** #if (CHECK_RSVD((PLL0CFG_Val),   ~0x00FF7FFF))
 346:../system_LPC17xx.c ****    #error "PLL0CFG: Invalid values of reserved bits!"
 347:../system_LPC17xx.c **** #endif
 348:../system_LPC17xx.c **** 
 349:../system_LPC17xx.c **** #if (CHECK_RSVD((PLL1CFG_Val),   ~0x0000007F))
 350:../system_LPC17xx.c ****    #error "PLL1CFG: Invalid values of reserved bits!"
 351:../system_LPC17xx.c **** #endif
 352:../system_LPC17xx.c **** 
 353:../system_LPC17xx.c **** #if ((CCLKCFG_Val != 0) && (((CCLKCFG_Val - 1) % 2)))
 354:../system_LPC17xx.c ****    #error "CCLKCFG: CCLKSEL field does not contain only odd values or 0!"
 355:../system_LPC17xx.c **** #endif
 356:../system_LPC17xx.c **** 
 357:../system_LPC17xx.c **** #if (CHECK_RSVD((USBCLKCFG_Val), ~0x0000000F))
 358:../system_LPC17xx.c ****    #error "USBCLKCFG: Invalid values of reserved bits!"
 359:../system_LPC17xx.c **** #endif
 360:../system_LPC17xx.c **** 
 361:../system_LPC17xx.c **** #if (CHECK_RSVD((PCLKSEL0_Val),   0x000C0C00))
 362:../system_LPC17xx.c ****    #error "PCLKSEL0: Invalid values of reserved bits!"
 363:../system_LPC17xx.c **** #endif
 364:../system_LPC17xx.c **** 
 365:../system_LPC17xx.c **** #if (CHECK_RSVD((PCLKSEL1_Val),   0x03000300))
 366:../system_LPC17xx.c ****    #error "PCLKSEL1: Invalid values of reserved bits!"
 367:../system_LPC17xx.c **** #endif
 368:../system_LPC17xx.c **** 
 369:../system_LPC17xx.c **** #if (CHECK_RSVD((PCONP_Val),      0x10100821))
 370:../system_LPC17xx.c ****    #error "PCONP: Invalid values of reserved bits!"
 371:../system_LPC17xx.c **** #endif
 372:../system_LPC17xx.c **** 
 373:../system_LPC17xx.c **** #if (CHECK_RSVD((CLKOUTCFG_Val), ~0x000001FF))
 374:../system_LPC17xx.c ****    #error "CLKOUTCFG: Invalid values of reserved bits!"
 375:../system_LPC17xx.c **** #endif
 376:../system_LPC17xx.c **** 
 377:../system_LPC17xx.c **** /* Flash Accelerator Configuration -------------------------------------------*/
 378:../system_LPC17xx.c **** #if (CHECK_RSVD((FLASHCFG_Val), ~0x0000F07F))
 379:../system_LPC17xx.c ****    #error "FLASHCFG: Invalid values of reserved bits!"
 380:../system_LPC17xx.c **** #endif
 381:../system_LPC17xx.c **** 
 382:../system_LPC17xx.c **** 
 383:../system_LPC17xx.c **** /*----------------------------------------------------------------------------
 384:../system_LPC17xx.c ****   DEFINES
 385:../system_LPC17xx.c ****  *----------------------------------------------------------------------------*/
 386:../system_LPC17xx.c ****     
 387:../system_LPC17xx.c **** /*----------------------------------------------------------------------------
 388:../system_LPC17xx.c ****   Define clocks
 389:../system_LPC17xx.c ****  *----------------------------------------------------------------------------*/
 390:../system_LPC17xx.c **** #define XTAL        (12000000UL)        /* Oscillator frequency               */
 391:../system_LPC17xx.c **** #define OSC_CLK     (      XTAL)        /* Main oscillator frequency          */
 392:../system_LPC17xx.c **** #define RTC_CLK     (   32000UL)        /* RTC oscillator frequency           */
 393:../system_LPC17xx.c **** #define IRC_OSC     ( 4000000UL)        /* Internal RC oscillator frequency   */
 394:../system_LPC17xx.c **** 
 395:../system_LPC17xx.c **** 
 396:../system_LPC17xx.c **** /* F_cco0 = (2 * M * F_in) / N  */
 397:../system_LPC17xx.c **** #define __M               (((PLL0CFG_Val      ) & 0x7FFF) + 1)
 398:../system_LPC17xx.c **** #define __N               (((PLL0CFG_Val >> 16) & 0x00FF) + 1)
 399:../system_LPC17xx.c **** #define __FCCO(__F_IN)    ((2 * __M * __F_IN) / __N) 
 400:../system_LPC17xx.c **** #define __CCLK_DIV        (((CCLKCFG_Val      ) & 0x00FF) + 1)
 401:../system_LPC17xx.c **** 
 402:../system_LPC17xx.c **** /* Determine core clock frequency according to settings */
 403:../system_LPC17xx.c ****  #if (PLL0_SETUP)
 404:../system_LPC17xx.c ****     #if   ((CLKSRCSEL_Val & 0x03) == 1)
 405:../system_LPC17xx.c ****         #define __CORE_CLK (__FCCO(OSC_CLK) / __CCLK_DIV)
 406:../system_LPC17xx.c ****     #elif ((CLKSRCSEL_Val & 0x03) == 2)
 407:../system_LPC17xx.c ****         #define __CORE_CLK (__FCCO(RTC_CLK) / __CCLK_DIV)
 408:../system_LPC17xx.c ****     #else 
 409:../system_LPC17xx.c ****         #define __CORE_CLK (__FCCO(IRC_OSC) / __CCLK_DIV)
 410:../system_LPC17xx.c ****     #endif
 411:../system_LPC17xx.c ****  #else
 412:../system_LPC17xx.c ****     #if   ((CLKSRCSEL_Val & 0x03) == 1)
 413:../system_LPC17xx.c ****         #define __CORE_CLK (OSC_CLK         / __CCLK_DIV)
 414:../system_LPC17xx.c ****     #elif ((CLKSRCSEL_Val & 0x03) == 2)
 415:../system_LPC17xx.c ****         #define __CORE_CLK (RTC_CLK         / __CCLK_DIV)
 416:../system_LPC17xx.c ****     #else
 417:../system_LPC17xx.c ****         #define __CORE_CLK (IRC_OSC         / __CCLK_DIV)
 418:../system_LPC17xx.c ****     #endif
 419:../system_LPC17xx.c ****  #endif
 420:../system_LPC17xx.c **** 
 421:../system_LPC17xx.c **** 
 422:../system_LPC17xx.c **** /*----------------------------------------------------------------------------
 423:../system_LPC17xx.c ****   Clock Variable definitions
 424:../system_LPC17xx.c ****  *----------------------------------------------------------------------------*/
 425:../system_LPC17xx.c **** uint32_t SystemCoreClock = __CORE_CLK;/*!< System Clock Frequency (Core Clock)*/
 426:../system_LPC17xx.c **** 
 427:../system_LPC17xx.c **** 
 428:../system_LPC17xx.c **** /*----------------------------------------------------------------------------
 429:../system_LPC17xx.c ****   Clock functions
 430:../system_LPC17xx.c ****  *----------------------------------------------------------------------------*/
 431:../system_LPC17xx.c **** void SystemCoreClockUpdate (void)            /* Get Core Clock Frequency      */
 432:../system_LPC17xx.c **** {
 2019              		.loc 1 432 0
 2020              		.cfi_startproc
 2021              		@ args = 0, pretend = 0, frame = 0
 2022              		@ frame_needed = 1, uses_anonymous_args = 0
 2023              		@ link register save eliminated.
 2024 0000 80B4     		push	{r7}
 2025              	.LCFI0:
 2026              		.cfi_def_cfa_offset 4
 2027 0002 00AF     		add	r7, sp, #0
 2028              		.cfi_offset 7, -4
 2029              	.LCFI1:
 2030              		.cfi_def_cfa_register 7
 433:../system_LPC17xx.c ****   /* Determine clock frequency according to clock register values             */
 434:../system_LPC17xx.c ****   if (((LPC_SC->PLL0STAT >> 24) & 3) == 3) { /* If PLL0 enabled and connected */
 2031              		.loc 1 434 0
 2032 0004 4CF20003 		movw	r3, #:lower16:1074774016
 2033 0008 C4F20F03 		movt	r3, #:upper16:1074774016
 2034 000c D3F88830 		ldr	r3, [r3, #136]
 2035 0010 4FEA1363 		lsr	r3, r3, #24
 2036 0014 03F00303 		and	r3, r3, #3
 2037 0018 032B     		cmp	r3, #3
 2038 001a 40F0AC80 		bne	.L2
 435:../system_LPC17xx.c ****     switch (LPC_SC->CLKSRCSEL & 0x03) {
 2039              		.loc 1 435 0
 2040 001e 4CF20003 		movw	r3, #:lower16:1074774016
 2041 0022 C4F20F03 		movt	r3, #:upper16:1074774016
 2042 0026 D3F80C31 		ldr	r3, [r3, #268]
 2043 002a 03F00303 		and	r3, r3, #3
 2044 002e 032B     		cmp	r3, #3
 2045 0030 00F2F680 		bhi	.L14
 2046 0034 01A2     		adr	r2, .L7
 2047 0036 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2048 003a 00BF     		.align	2
 2049              	.L7:
 2050 003c 4D000000 		.word	.L4+1
 2051 0040 B1000000 		.word	.L5+1
 2052 0044 17010000 		.word	.L6+1
 2053 0048 4D000000 		.word	.L4+1
 2054              	.L4:
 436:../system_LPC17xx.c ****       case 0:                                /* Int. RC oscillator => PLL0    */
 437:../system_LPC17xx.c ****       case 3:                                /* Reserved, default to Int. RC  */
 438:../system_LPC17xx.c ****         SystemCoreClock = (IRC_OSC * 
 439:../system_LPC17xx.c ****                           ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))  /
 2055              		.loc 1 439 0
 2056 004c 4CF20003 		movw	r3, #:lower16:1074774016
 2057 0050 C4F20F03 		movt	r3, #:upper16:1074774016
 2058 0054 D3F88830 		ldr	r3, [r3, #136]
 2059 0058 4FEA4343 		lsl	r3, r3, #17
 2060 005c 4FEA5343 		lsr	r3, r3, #17
 2061 0060 03F10102 		add	r2, r3, #1
 2062 0064 41F20023 		movw	r3, #:lower16:8000000
 2063 0068 C0F27A03 		movt	r3, #:upper16:8000000
 2064 006c 03FB02F2 		mul	r2, r3, r2
 440:../system_LPC17xx.c ****                           (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)    /
 2065              		.loc 1 440 0
 2066 0070 4CF20003 		movw	r3, #:lower16:1074774016
 2067 0074 C4F20F03 		movt	r3, #:upper16:1074774016
 2068 0078 D3F88830 		ldr	r3, [r3, #136]
 2069 007c 4FEA1343 		lsr	r3, r3, #16
 2070 0080 03F0FF03 		and	r3, r3, #255
 2071 0084 03F10103 		add	r3, r3, #1
 2072 0088 B2FBF3F2 		udiv	r2, r2, r3
 441:../system_LPC17xx.c ****                           ((LPC_SC->CCLKCFG & 0xFF)+ 1));
 2073              		.loc 1 441 0
 2074 008c 4CF20003 		movw	r3, #:lower16:1074774016
 2075 0090 C4F20F03 		movt	r3, #:upper16:1074774016
 2076 0094 D3F80431 		ldr	r3, [r3, #260]
 2077 0098 03F0FF03 		and	r3, r3, #255
 2078 009c 03F10103 		add	r3, r3, #1
 2079              		.loc 1 438 0
 2080 00a0 B2FBF3F2 		udiv	r2, r2, r3
 2081 00a4 40F20003 		movw	r3, #:lower16:SystemCoreClock
 2082 00a8 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 2083 00ac 1A60     		str	r2, [r3, #0]
 442:../system_LPC17xx.c ****         break;
 2084              		.loc 1 442 0
 2085 00ae B8E0     		b	.L13
 2086              	.L5:
 443:../system_LPC17xx.c ****       case 1:                                /* Main oscillator => PLL0       */
 444:../system_LPC17xx.c ****         SystemCoreClock = (OSC_CLK * 
 445:../system_LPC17xx.c ****                           ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))  /
 2087              		.loc 1 445 0
 2088 00b0 4CF20003 		movw	r3, #:lower16:1074774016
 2089 00b4 C4F20F03 		movt	r3, #:upper16:1074774016
 2090 00b8 D3F88830 		ldr	r3, [r3, #136]
 2091 00bc 4FEA4343 		lsl	r3, r3, #17
 2092 00c0 4FEA5343 		lsr	r3, r3, #17
 2093 00c4 03F10102 		add	r2, r3, #1
 2094 00c8 43F20063 		movw	r3, #:lower16:24000000
 2095 00cc C0F26E13 		movt	r3, #:upper16:24000000
 2096 00d0 03FB02F2 		mul	r2, r3, r2
 446:../system_LPC17xx.c ****                           (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)    /
 2097              		.loc 1 446 0
 2098 00d4 4CF20003 		movw	r3, #:lower16:1074774016
 2099 00d8 C4F20F03 		movt	r3, #:upper16:1074774016
 2100 00dc D3F88830 		ldr	r3, [r3, #136]
 2101 00e0 4FEA1343 		lsr	r3, r3, #16
 2102 00e4 03F0FF03 		and	r3, r3, #255
 2103 00e8 03F10103 		add	r3, r3, #1
 2104 00ec B2FBF3F2 		udiv	r2, r2, r3
 447:../system_LPC17xx.c ****                           ((LPC_SC->CCLKCFG & 0xFF)+ 1));
 2105              		.loc 1 447 0
 2106 00f0 4CF20003 		movw	r3, #:lower16:1074774016
 2107 00f4 C4F20F03 		movt	r3, #:upper16:1074774016
 2108 00f8 D3F80431 		ldr	r3, [r3, #260]
 2109 00fc 03F0FF03 		and	r3, r3, #255
 2110 0100 03F10103 		add	r3, r3, #1
 2111              		.loc 1 444 0
 2112 0104 B2FBF3F2 		udiv	r2, r2, r3
 2113 0108 40F20003 		movw	r3, #:lower16:SystemCoreClock
 2114 010c C0F20003 		movt	r3, #:upper16:SystemCoreClock
 2115 0110 1A60     		str	r2, [r3, #0]
 448:../system_LPC17xx.c ****         break;
 2116              		.loc 1 448 0
 2117 0112 00BF     		nop
 2118 0114 85E0     		b	.L13
 2119              	.L6:
 449:../system_LPC17xx.c ****       case 2:                                /* RTC oscillator => PLL0        */
 450:../system_LPC17xx.c ****         SystemCoreClock = (RTC_CLK * 
 451:../system_LPC17xx.c ****                           ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))  /
 2120              		.loc 1 451 0
 2121 0116 4CF20003 		movw	r3, #:lower16:1074774016
 2122 011a C4F20F03 		movt	r3, #:upper16:1074774016
 2123 011e D3F88830 		ldr	r3, [r3, #136]
 2124 0122 4FEA4343 		lsl	r3, r3, #17
 2125 0126 4FEA5343 		lsr	r3, r3, #17
 2126 012a 03F10103 		add	r3, r3, #1
 2127 012e 4FF47A42 		mov	r2, #64000
 2128 0132 02FB03F2 		mul	r2, r2, r3
 452:../system_LPC17xx.c ****                           (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)    /
 2129              		.loc 1 452 0
 2130 0136 4CF20003 		movw	r3, #:lower16:1074774016
 2131 013a C4F20F03 		movt	r3, #:upper16:1074774016
 2132 013e D3F88830 		ldr	r3, [r3, #136]
 2133 0142 4FEA1343 		lsr	r3, r3, #16
 2134 0146 03F0FF03 		and	r3, r3, #255
 2135 014a 03F10103 		add	r3, r3, #1
 2136 014e B2FBF3F2 		udiv	r2, r2, r3
 453:../system_LPC17xx.c ****                           ((LPC_SC->CCLKCFG & 0xFF)+ 1));
 2137              		.loc 1 453 0
 2138 0152 4CF20003 		movw	r3, #:lower16:1074774016
 2139 0156 C4F20F03 		movt	r3, #:upper16:1074774016
 2140 015a D3F80431 		ldr	r3, [r3, #260]
 2141 015e 03F0FF03 		and	r3, r3, #255
 2142 0162 03F10103 		add	r3, r3, #1
 2143              		.loc 1 450 0
 2144 0166 B2FBF3F2 		udiv	r2, r2, r3
 2145 016a 40F20003 		movw	r3, #:lower16:SystemCoreClock
 2146 016e C0F20003 		movt	r3, #:upper16:SystemCoreClock
 2147 0172 1A60     		str	r2, [r3, #0]
 2148 0174 55E0     		b	.L13
 2149              	.L2:
 454:../system_LPC17xx.c ****         break;
 455:../system_LPC17xx.c ****     }
 456:../system_LPC17xx.c ****   } else {
 457:../system_LPC17xx.c ****     switch (LPC_SC->CLKSRCSEL & 0x03) {
 2150              		.loc 1 457 0
 2151 0176 4CF20003 		movw	r3, #:lower16:1074774016
 2152 017a C4F20F03 		movt	r3, #:upper16:1074774016
 2153 017e D3F80C31 		ldr	r3, [r3, #268]
 2154 0182 03F00303 		and	r3, r3, #3
 2155 0186 032B     		cmp	r3, #3
 2156 0188 4BD8     		bhi	.L13
 2157 018a 01A2     		adr	r2, .L12
 2158 018c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2159              		.align	2
 2160              	.L12:
 2161 0190 A1010000 		.word	.L9+1
 2162 0194 CD010000 		.word	.L10+1
 2163 0198 F9010000 		.word	.L11+1
 2164 019c A1010000 		.word	.L9+1
 2165              	.L9:
 458:../system_LPC17xx.c ****       case 0:                                /* Int. RC oscillator => PLL0    */
 459:../system_LPC17xx.c ****       case 3:                                /* Reserved, default to Int. RC  */
 460:../system_LPC17xx.c ****         SystemCoreClock = IRC_OSC / ((LPC_SC->CCLKCFG & 0xFF)+ 1);
 2166              		.loc 1 460 0
 2167 01a0 4CF20003 		movw	r3, #:lower16:1074774016
 2168 01a4 C4F20F03 		movt	r3, #:upper16:1074774016
 2169 01a8 D3F80431 		ldr	r3, [r3, #260]
 2170 01ac 03F0FF03 		and	r3, r3, #255
 2171 01b0 03F10102 		add	r2, r3, #1
 2172 01b4 40F60013 		movw	r3, #:lower16:4000000
 2173 01b8 C0F23D03 		movt	r3, #:upper16:4000000
 2174 01bc B3FBF2F2 		udiv	r2, r3, r2
 2175 01c0 40F20003 		movw	r3, #:lower16:SystemCoreClock
 2176 01c4 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 2177 01c8 1A60     		str	r2, [r3, #0]
 461:../system_LPC17xx.c ****         break;
 2178              		.loc 1 461 0
 2179 01ca 2AE0     		b	.L13
 2180              	.L10:
 462:../system_LPC17xx.c ****       case 1:                                /* Main oscillator => PLL0       */
 463:../system_LPC17xx.c ****         SystemCoreClock = OSC_CLK / ((LPC_SC->CCLKCFG & 0xFF)+ 1);
 2181              		.loc 1 463 0
 2182 01cc 4CF20003 		movw	r3, #:lower16:1074774016
 2183 01d0 C4F20F03 		movt	r3, #:upper16:1074774016
 2184 01d4 D3F80431 		ldr	r3, [r3, #260]
 2185 01d8 03F0FF03 		and	r3, r3, #255
 2186 01dc 03F10102 		add	r2, r3, #1
 2187 01e0 41F60033 		movw	r3, #:lower16:12000000
 2188 01e4 C0F2B703 		movt	r3, #:upper16:12000000
 2189 01e8 B3FBF2F2 		udiv	r2, r3, r2
 2190 01ec 40F20003 		movw	r3, #:lower16:SystemCoreClock
 2191 01f0 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 2192 01f4 1A60     		str	r2, [r3, #0]
 464:../system_LPC17xx.c ****         break;
 2193              		.loc 1 464 0
 2194 01f6 14E0     		b	.L13
 2195              	.L11:
 465:../system_LPC17xx.c ****       case 2:                                /* RTC oscillator => PLL0        */
 466:../system_LPC17xx.c ****         SystemCoreClock = RTC_CLK / ((LPC_SC->CCLKCFG & 0xFF)+ 1);
 2196              		.loc 1 466 0
 2197 01f8 4CF20003 		movw	r3, #:lower16:1074774016
 2198 01fc C4F20F03 		movt	r3, #:upper16:1074774016
 2199 0200 D3F80431 		ldr	r3, [r3, #260]
 2200 0204 03F0FF03 		and	r3, r3, #255
 2201 0208 03F10103 		add	r3, r3, #1
 2202 020c 4FF4FA42 		mov	r2, #32000
 2203 0210 B2FBF3F2 		udiv	r2, r2, r3
 2204 0214 40F20003 		movw	r3, #:lower16:SystemCoreClock
 2205 0218 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 2206 021c 1A60     		str	r2, [r3, #0]
 2207 021e 00E0     		b	.L13
 2208              	.L14:
 2209              		.loc 1 450 0
 2210 0220 00BF     		nop
 2211              	.L13:
 467:../system_LPC17xx.c ****         break;
 468:../system_LPC17xx.c ****     }
 469:../system_LPC17xx.c ****   }
 470:../system_LPC17xx.c **** 
 471:../system_LPC17xx.c **** }
 2212              		.loc 1 471 0
 2213 0222 BD46     		mov	sp, r7
 2214 0224 80BC     		pop	{r7}
 2215 0226 7047     		bx	lr
 2216              		.cfi_endproc
 2217              	.LFE29:
 2219              		.align	2
 2220              		.global	SystemInit
 2221              		.thumb
 2222              		.thumb_func
 2224              	SystemInit:
 2225              	.LFB30:
 472:../system_LPC17xx.c **** 
 473:../system_LPC17xx.c **** /**
 474:../system_LPC17xx.c ****  * Initialize the system
 475:../system_LPC17xx.c ****  *
 476:../system_LPC17xx.c ****  * @param  none
 477:../system_LPC17xx.c ****  * @return none
 478:../system_LPC17xx.c ****  *
 479:../system_LPC17xx.c ****  * @brief  Setup the microcontroller system.
 480:../system_LPC17xx.c ****  *         Initialize the System.
 481:../system_LPC17xx.c ****  */
 482:../system_LPC17xx.c **** void SystemInit (void)
 483:../system_LPC17xx.c **** {
 2226              		.loc 1 483 0
 2227              		.cfi_startproc
 2228              		@ args = 0, pretend = 0, frame = 0
 2229              		@ frame_needed = 1, uses_anonymous_args = 0
 2230              		@ link register save eliminated.
 2231 0228 80B4     		push	{r7}
 2232              	.LCFI2:
 2233              		.cfi_def_cfa_offset 4
 2234 022a 00AF     		add	r7, sp, #0
 2235              		.cfi_offset 7, -4
 2236              	.LCFI3:
 2237              		.cfi_def_cfa_register 7
 484:../system_LPC17xx.c **** #if (CLOCK_SETUP)                       /* Clock Setup                        */
 485:../system_LPC17xx.c ****   LPC_SC->SCS       = SCS_Val;
 2238              		.loc 1 485 0
 2239 022c 4CF20003 		movw	r3, #:lower16:1074774016
 2240 0230 C4F20F03 		movt	r3, #:upper16:1074774016
 2241 0234 4FF02002 		mov	r2, #32
 2242 0238 C3F8A021 		str	r2, [r3, #416]
 2243              	.L16:
 486:../system_LPC17xx.c ****   if (SCS_Val & (1 << 5)) {             /* If Main Oscillator is enabled      */
 487:../system_LPC17xx.c ****     while ((LPC_SC->SCS & (1<<6)) == 0);/* Wait for Oscillator to be ready    */
 2244              		.loc 1 487 0
 2245 023c 4CF20003 		movw	r3, #:lower16:1074774016
 2246 0240 C4F20F03 		movt	r3, #:upper16:1074774016
 2247 0244 D3F8A031 		ldr	r3, [r3, #416]
 2248 0248 03F04003 		and	r3, r3, #64
 2249 024c 002B     		cmp	r3, #0
 2250 024e F5D0     		beq	.L16
 488:../system_LPC17xx.c ****   }
 489:../system_LPC17xx.c **** 
 490:../system_LPC17xx.c ****   LPC_SC->CCLKCFG   = CCLKCFG_Val;      /* Setup Clock Divider                */
 2251              		.loc 1 490 0
 2252 0250 4CF20003 		movw	r3, #:lower16:1074774016
 2253 0254 C4F20F03 		movt	r3, #:upper16:1074774016
 2254 0258 4FF00302 		mov	r2, #3
 2255 025c C3F80421 		str	r2, [r3, #260]
 491:../system_LPC17xx.c **** 
 492:../system_LPC17xx.c **** #if (PLL0_SETUP)
 493:../system_LPC17xx.c ****   LPC_SC->CLKSRCSEL = CLKSRCSEL_Val;    /* Select Clock Source for PLL0       */
 2256              		.loc 1 493 0
 2257 0260 4CF20003 		movw	r3, #:lower16:1074774016
 2258 0264 C4F20F03 		movt	r3, #:upper16:1074774016
 2259 0268 4FF00102 		mov	r2, #1
 2260 026c C3F80C21 		str	r2, [r3, #268]
 494:../system_LPC17xx.c **** 
 495:../system_LPC17xx.c ****   LPC_SC->PLL0CFG   = PLL0CFG_Val;      /* configure PLL0                     */
 2261              		.loc 1 495 0
 2262 0270 4CF20003 		movw	r3, #:lower16:1074774016
 2263 0274 C4F20F03 		movt	r3, #:upper16:1074774016
 2264 0278 40F26302 		movw	r2, #:lower16:327779
 2265 027c C0F20502 		movt	r2, #:upper16:327779
 2266 0280 C3F88420 		str	r2, [r3, #132]
 496:../system_LPC17xx.c ****   LPC_SC->PLL0FEED  = 0xAA;
 2267              		.loc 1 496 0
 2268 0284 4CF20003 		movw	r3, #:lower16:1074774016
 2269 0288 C4F20F03 		movt	r3, #:upper16:1074774016
 2270 028c 4FF0AA02 		mov	r2, #170
 2271 0290 C3F88C20 		str	r2, [r3, #140]
 497:../system_LPC17xx.c ****   LPC_SC->PLL0FEED  = 0x55;
 2272              		.loc 1 497 0
 2273 0294 4CF20003 		movw	r3, #:lower16:1074774016
 2274 0298 C4F20F03 		movt	r3, #:upper16:1074774016
 2275 029c 4FF05502 		mov	r2, #85
 2276 02a0 C3F88C20 		str	r2, [r3, #140]
 498:../system_LPC17xx.c **** 
 499:../system_LPC17xx.c ****   LPC_SC->PLL0CON   = 0x01;             /* PLL0 Enable                        */
 2277              		.loc 1 499 0
 2278 02a4 4CF20003 		movw	r3, #:lower16:1074774016
 2279 02a8 C4F20F03 		movt	r3, #:upper16:1074774016
 2280 02ac 4FF00102 		mov	r2, #1
 2281 02b0 C3F88020 		str	r2, [r3, #128]
 500:../system_LPC17xx.c ****   LPC_SC->PLL0FEED  = 0xAA;
 2282              		.loc 1 500 0
 2283 02b4 4CF20003 		movw	r3, #:lower16:1074774016
 2284 02b8 C4F20F03 		movt	r3, #:upper16:1074774016
 2285 02bc 4FF0AA02 		mov	r2, #170
 2286 02c0 C3F88C20 		str	r2, [r3, #140]
 501:../system_LPC17xx.c ****   LPC_SC->PLL0FEED  = 0x55;
 2287              		.loc 1 501 0
 2288 02c4 4CF20003 		movw	r3, #:lower16:1074774016
 2289 02c8 C4F20F03 		movt	r3, #:upper16:1074774016
 2290 02cc 4FF05502 		mov	r2, #85
 2291 02d0 C3F88C20 		str	r2, [r3, #140]
 2292              	.L17:
 502:../system_LPC17xx.c ****   while (!(LPC_SC->PLL0STAT & (1<<26)));/* Wait for PLOCK0                    */
 2293              		.loc 1 502 0
 2294 02d4 4CF20003 		movw	r3, #:lower16:1074774016
 2295 02d8 C4F20F03 		movt	r3, #:upper16:1074774016
 2296 02dc D3F88830 		ldr	r3, [r3, #136]
 2297 02e0 03F08063 		and	r3, r3, #67108864
 2298 02e4 002B     		cmp	r3, #0
 2299 02e6 F5D0     		beq	.L17
 503:../system_LPC17xx.c **** 
 504:../system_LPC17xx.c ****   LPC_SC->PLL0CON   = 0x03;             /* PLL0 Enable & Connect              */
 2300              		.loc 1 504 0
 2301 02e8 4CF20003 		movw	r3, #:lower16:1074774016
 2302 02ec C4F20F03 		movt	r3, #:upper16:1074774016
 2303 02f0 4FF00302 		mov	r2, #3
 2304 02f4 C3F88020 		str	r2, [r3, #128]
 505:../system_LPC17xx.c ****   LPC_SC->PLL0FEED  = 0xAA;
 2305              		.loc 1 505 0
 2306 02f8 4CF20003 		movw	r3, #:lower16:1074774016
 2307 02fc C4F20F03 		movt	r3, #:upper16:1074774016
 2308 0300 4FF0AA02 		mov	r2, #170
 2309 0304 C3F88C20 		str	r2, [r3, #140]
 506:../system_LPC17xx.c ****   LPC_SC->PLL0FEED  = 0x55;
 2310              		.loc 1 506 0
 2311 0308 4CF20003 		movw	r3, #:lower16:1074774016
 2312 030c C4F20F03 		movt	r3, #:upper16:1074774016
 2313 0310 4FF05502 		mov	r2, #85
 2314 0314 C3F88C20 		str	r2, [r3, #140]
 2315              	.L18:
 507:../system_LPC17xx.c ****   while (!(LPC_SC->PLL0STAT & ((1<<25) | (1<<24))));/* Wait for PLLC0_STAT & PLLE0_STAT */
 2316              		.loc 1 507 0
 2317 0318 4CF20003 		movw	r3, #:lower16:1074774016
 2318 031c C4F20F03 		movt	r3, #:upper16:1074774016
 2319 0320 D3F88830 		ldr	r3, [r3, #136]
 2320 0324 03F04073 		and	r3, r3, #50331648
 2321 0328 002B     		cmp	r3, #0
 2322 032a F5D0     		beq	.L18
 508:../system_LPC17xx.c **** #endif
 509:../system_LPC17xx.c **** 
 510:../system_LPC17xx.c **** #if (PLL1_SETUP)
 511:../system_LPC17xx.c ****   LPC_SC->PLL1CFG   = PLL1CFG_Val;
 2323              		.loc 1 511 0
 2324 032c 4CF20003 		movw	r3, #:lower16:1074774016
 2325 0330 C4F20F03 		movt	r3, #:upper16:1074774016
 2326 0334 4FF02302 		mov	r2, #35
 2327 0338 C3F8A420 		str	r2, [r3, #164]
 512:../system_LPC17xx.c ****   LPC_SC->PLL1FEED  = 0xAA;
 2328              		.loc 1 512 0
 2329 033c 4CF20003 		movw	r3, #:lower16:1074774016
 2330 0340 C4F20F03 		movt	r3, #:upper16:1074774016
 2331 0344 4FF0AA02 		mov	r2, #170
 2332 0348 C3F8AC20 		str	r2, [r3, #172]
 513:../system_LPC17xx.c ****   LPC_SC->PLL1FEED  = 0x55;
 2333              		.loc 1 513 0
 2334 034c 4CF20003 		movw	r3, #:lower16:1074774016
 2335 0350 C4F20F03 		movt	r3, #:upper16:1074774016
 2336 0354 4FF05502 		mov	r2, #85
 2337 0358 C3F8AC20 		str	r2, [r3, #172]
 514:../system_LPC17xx.c **** 
 515:../system_LPC17xx.c ****   LPC_SC->PLL1CON   = 0x01;             /* PLL1 Enable                        */
 2338              		.loc 1 515 0
 2339 035c 4CF20003 		movw	r3, #:lower16:1074774016
 2340 0360 C4F20F03 		movt	r3, #:upper16:1074774016
 2341 0364 4FF00102 		mov	r2, #1
 2342 0368 C3F8A020 		str	r2, [r3, #160]
 516:../system_LPC17xx.c ****   LPC_SC->PLL1FEED  = 0xAA;
 2343              		.loc 1 516 0
 2344 036c 4CF20003 		movw	r3, #:lower16:1074774016
 2345 0370 C4F20F03 		movt	r3, #:upper16:1074774016
 2346 0374 4FF0AA02 		mov	r2, #170
 2347 0378 C3F8AC20 		str	r2, [r3, #172]
 517:../system_LPC17xx.c ****   LPC_SC->PLL1FEED  = 0x55;
 2348              		.loc 1 517 0
 2349 037c 4CF20003 		movw	r3, #:lower16:1074774016
 2350 0380 C4F20F03 		movt	r3, #:upper16:1074774016
 2351 0384 4FF05502 		mov	r2, #85
 2352 0388 C3F8AC20 		str	r2, [r3, #172]
 2353              	.L19:
 518:../system_LPC17xx.c ****   while (!(LPC_SC->PLL1STAT & (1<<10)));/* Wait for PLOCK1                    */
 2354              		.loc 1 518 0
 2355 038c 4CF20003 		movw	r3, #:lower16:1074774016
 2356 0390 C4F20F03 		movt	r3, #:upper16:1074774016
 2357 0394 D3F8A830 		ldr	r3, [r3, #168]
 2358 0398 03F48063 		and	r3, r3, #1024
 2359 039c 002B     		cmp	r3, #0
 2360 039e F5D0     		beq	.L19
 519:../system_LPC17xx.c **** 
 520:../system_LPC17xx.c ****   LPC_SC->PLL1CON   = 0x03;             /* PLL1 Enable & Connect              */
 2361              		.loc 1 520 0
 2362 03a0 4CF20003 		movw	r3, #:lower16:1074774016
 2363 03a4 C4F20F03 		movt	r3, #:upper16:1074774016
 2364 03a8 4FF00302 		mov	r2, #3
 2365 03ac C3F8A020 		str	r2, [r3, #160]
 521:../system_LPC17xx.c ****   LPC_SC->PLL1FEED  = 0xAA;
 2366              		.loc 1 521 0
 2367 03b0 4CF20003 		movw	r3, #:lower16:1074774016
 2368 03b4 C4F20F03 		movt	r3, #:upper16:1074774016
 2369 03b8 4FF0AA02 		mov	r2, #170
 2370 03bc C3F8AC20 		str	r2, [r3, #172]
 522:../system_LPC17xx.c ****   LPC_SC->PLL1FEED  = 0x55;
 2371              		.loc 1 522 0
 2372 03c0 4CF20003 		movw	r3, #:lower16:1074774016
 2373 03c4 C4F20F03 		movt	r3, #:upper16:1074774016
 2374 03c8 4FF05502 		mov	r2, #85
 2375 03cc C3F8AC20 		str	r2, [r3, #172]
 2376              	.L20:
 523:../system_LPC17xx.c ****   while (!(LPC_SC->PLL1STAT & ((1<< 9) | (1<< 8))));/* Wait for PLLC1_STAT & PLLE1_STAT */
 2377              		.loc 1 523 0
 2378 03d0 4CF20003 		movw	r3, #:lower16:1074774016
 2379 03d4 C4F20F03 		movt	r3, #:upper16:1074774016
 2380 03d8 D3F8A830 		ldr	r3, [r3, #168]
 2381 03dc 03F44073 		and	r3, r3, #768
 2382 03e0 002B     		cmp	r3, #0
 2383 03e2 F5D0     		beq	.L20
 524:../system_LPC17xx.c **** #else
 525:../system_LPC17xx.c ****   LPC_SC->USBCLKCFG = USBCLKCFG_Val;    /* Setup USB Clock Divider            */
 526:../system_LPC17xx.c **** #endif
 527:../system_LPC17xx.c **** 
 528:../system_LPC17xx.c ****   LPC_SC->PCLKSEL0  = PCLKSEL0_Val;     /* Peripheral Clock Selection         */
 2384              		.loc 1 528 0
 2385 03e4 4CF20003 		movw	r3, #:lower16:1074774016
 2386 03e8 C4F20F03 		movt	r3, #:upper16:1074774016
 2387 03ec 4FF00002 		mov	r2, #0
 2388 03f0 C3F8A821 		str	r2, [r3, #424]
 529:../system_LPC17xx.c ****   LPC_SC->PCLKSEL1  = PCLKSEL1_Val;
 2389              		.loc 1 529 0
 2390 03f4 4CF20003 		movw	r3, #:lower16:1074774016
 2391 03f8 C4F20F03 		movt	r3, #:upper16:1074774016
 2392 03fc 4FF00002 		mov	r2, #0
 2393 0400 C3F8AC21 		str	r2, [r3, #428]
 530:../system_LPC17xx.c **** 
 531:../system_LPC17xx.c ****   LPC_SC->PCONP     = PCONP_Val;        /* Power Control for Peripherals      */
 2394              		.loc 1 531 0
 2395 0404 4CF20003 		movw	r3, #:lower16:1074774016
 2396 0408 C4F20F03 		movt	r3, #:upper16:1074774016
 2397 040c 48F2DE72 		movw	r2, #:lower16:69765086
 2398 0410 C0F22842 		movt	r2, #:upper16:69765086
 2399 0414 C3F8C420 		str	r2, [r3, #196]
 532:../system_LPC17xx.c **** 
 533:../system_LPC17xx.c ****   LPC_SC->CLKOUTCFG = CLKOUTCFG_Val;    /* Clock Output Configuration         */
 2400              		.loc 1 533 0
 2401 0418 4CF20003 		movw	r3, #:lower16:1074774016
 2402 041c C4F20F03 		movt	r3, #:upper16:1074774016
 2403 0420 4FF00002 		mov	r2, #0
 2404 0424 C3F8C821 		str	r2, [r3, #456]
 534:../system_LPC17xx.c **** #endif
 535:../system_LPC17xx.c **** 
 536:../system_LPC17xx.c **** #if (FLASH_SETUP == 1)                  /* Flash Accelerator Setup            */
 537:../system_LPC17xx.c ****   LPC_SC->FLASHCFG  = FLASHCFG_Val;
 2405              		.loc 1 537 0
 2406 0428 4CF20003 		movw	r3, #:lower16:1074774016
 2407 042c C4F20F03 		movt	r3, #:upper16:1074774016
 2408 0430 43F23A02 		movw	r2, #12346
 2409 0434 1A60     		str	r2, [r3, #0]
 538:../system_LPC17xx.c **** #endif
 539:../system_LPC17xx.c **** }
 2410              		.loc 1 539 0
 2411 0436 BD46     		mov	sp, r7
 2412 0438 80BC     		pop	{r7}
 2413 043a 7047     		bx	lr
 2414              		.cfi_endproc
 2415              	.LFE30:
 2417              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 system_LPC17xx.c
G:\DOCUME~1\marcelo\CONFIG~1\Temp\ccIx0rWC.s:2009   .data:00000000 SystemCoreClock
G:\DOCUME~1\marcelo\CONFIG~1\Temp\ccIx0rWC.s:2006   .data:00000000 $d
G:\DOCUME~1\marcelo\CONFIG~1\Temp\ccIx0rWC.s:2012   .text:00000000 $t
G:\DOCUME~1\marcelo\CONFIG~1\Temp\ccIx0rWC.s:2017   .text:00000000 SystemCoreClockUpdate
G:\DOCUME~1\marcelo\CONFIG~1\Temp\ccIx0rWC.s:2050   .text:0000003c $d
G:\DOCUME~1\marcelo\CONFIG~1\Temp\ccIx0rWC.s:2056   .text:0000004c $t
G:\DOCUME~1\marcelo\CONFIG~1\Temp\ccIx0rWC.s:2161   .text:00000190 $d
G:\DOCUME~1\marcelo\CONFIG~1\Temp\ccIx0rWC.s:2167   .text:000001a0 $t
G:\DOCUME~1\marcelo\CONFIG~1\Temp\ccIx0rWC.s:2224   .text:00000228 SystemInit
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
